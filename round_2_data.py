color_def = [[(174, 216, 115) , (185, 255, 255)],     #red
			 [(120, 152, 68) , (163, 210, 255)],		#VIOLET
			 [(40, 174, 136) , (135, 255, 255)],		#green
			 [(170,116,153),(210,255,255)]]		#green 
			 			
# deifne 1 extra turn direction and limit and directions > limits by 1
is_round_1 = False
# pixel range 1200x720																#turn_path, 1 : reverse, 2 : halt 3: pause
# [l_lim,u_lim ]  is changed to [center]
# path_def format [ [dir], [limits], [offset], [center], [turn_path] ]
path_def = [[
			[ ['E', 'W', 'W'] , [331, 155] , [461, 47] , [342] , [1, 2] ],
			[ ['E', 'W', 'W'] , [602, 155] , [732, 49] , [345] , [1, 2] ],
			[ ['E', 'W', 'W'] , [863, 155] , [993, 52] , [345] , [1, 2] ],
			[ ['E', 'S', 'N', 'W', 'W'] , [240, 403, 335, 165] , [382, 538, 205, 46] , [335] , [0, 1, 0, 2] ],
			[ ['E', 'S', 'N', 'W', 'W'] , [510, 414, 338, 165] , [643, 544, 206, 58] , [336] , [0, 1, 0, 2] ],
			[ ['E', 'S', 'N', 'W', 'W'] , [780, 413, 337, 165] , [907, 543, 207, 56] , [337] , [0, 1, 0, 2] ],
			[ ['E', 'S', 'N', 'W', 'W'] , [240, 682, 333, 165] , [379, 812, 208, 56] , [338] , [0, 1, 0, 2] ],
			[ ['E', 'S', 'N', 'W', 'W'] , [509, 685, 338, 165] , [641, 815, 208, 55] , [338] , [0, 1, 0, 2] ],
			[ ['E', 'S', 'N', 'W', 'W'] , [785, 677, 336, 163] , [909, 807, 214, 51] , [342] , [0, 1, 0, 2] ],
			],
			[
			[ ['E', 'N', 'S', 'W', 'W'] , [460, 274, 615, 156] , [580, 144, 745, 35] , [615] , [0, 1, 0, 2] ],
			[ ['E', 'N', 'S', 'W', 'W'] , [730, 271, 615, 156] , [848, 141, 749, 35] , [615] , [0, 1, 0, 2] ],
			[ ['E', 'N', 'S', 'W', 'W'] , [1003, 270, 616, 156] , [1130, 140, 746, 33] , [615] , [0, 1, 0, 2] ],
			[ ['E', 'N', 'S', 'W', 'W'] , [450, 535, 617, 156] , [580, 405, 743, 33] , [615] , [0, 1, 0, 2] ],
			[ ['E', 'N', 'S', 'W', 'W'] , [730, 539, 615, 156] , [848, 409, 742, 35] , [615] , [0, 1, 0, 2] ],
			[ ['E', 'N', 'S', 'W', 'W'] , [1001, 532, 614, 156] , [1131, 402, 744, 33] , [615] , [0, 1, 0, 2] ],
			[ ['E', 'W', 'W'] , [309, 156] , [439, 33] , [680] , [1, 2] ],
			[ ['E', 'W', 'W'] , [579, 156] , [709, 35] , [680] , [1, 2] ],
			[ ['E', 'W', 'W'] , [853, 156] , [983, 34] , [680] , [1, 2] ]
			],
			[
			[ ['E', 'W', 'W'] , [485, 310] , [585, 210] , [314] , [1, 2] ],
			[ ['E', 'W', 'W'] , [776, 309] , [876, 209] , [313] , [1, 2] ],
			[ ['E', 'W', 'W'] , [950, 308] , [1050, 208] , [312] , [1, 2] ],
			[ ['S', 'W', 'W'] , [290, 376] , [390, 276] , [497] , [0,2] ],
			[ ['E', 'S', 'N', 'W', 'W'] , [427, 662, 311, 308] , [527, 762, 211, 208] , [311] , [0, 1, 0, 2] ],
			[ ['E', 'S', 'N', 'W', 'W'] , [657, 429, 310, 310] , [757, 529, 210, 210] , [310] , [0, 1, 0, 2] ],
			[ ['E', 'S', 'N', 'W', 'W'] , [654, 658, 309, 307] , [754, 758, 209, 207] , [309] , [0, 1, 0, 2] ],
			[ ['E', 'S', 'N', 'W', 'W'] , [893, 426, 310, 306] , [993, 526, 210, 206] , [310] , [0, 1, 0, 2] ],
			[ ['E', 'S', 'N', 'W', 'W'] , [891, 658, 310, 306] , [991, 758, 210, 206] , [310] , [0, 1, 0, 2] ]
			],
			[
			[ ['E', 'S', 'E', 'N', 'W', 'E', 'S', 'W', 'N', 'W', 'W'] , [218, 856, 1093, 119, 426, 1074, 846, 216, 646, 161] , [318, 956, 1193, 19, 326, 1174, 946, 116, 546, 61] , [646] , [0, 0, 0, 0, 1, 0, 0, 0, 0, 2] ],
			[ ['E', 'S', 'E', 'N', 'W', 'E', 'S', 'W', 'N', 'W', 'W'] , [214, 854, 1092, 118, 677, 1077, 845, 215, 644, 161] , [314, 954, 1192, 18, 577, 1177, 945, 115, 544, 61] , [644] , [0, 0, 0, 0, 1, 0, 0, 0, 0, 2] ],
			[ ['E', 'S', 'E', 'N', 'W', 'E', 'S', 'W', 'N', 'W', 'W'] , [214, 852, 1091, 119, 943, 1073, 846, 219, 645, 160] , [314, 952, 1191, 19, 843, 1173, 946, 119, 545, 60] , [645] , [0, 0, 0, 0, 1, 0, 0, 0, 0, 2] ],
			[ ['N', 'W', 'W'] , [653, 159] , [553, 59] , [223] , [0,2] ],
			[ ['E', 'N', 'S', 'W', 'W'] , [835, 490, 601, 308] , [935, 390, 701, 208] , [601] , [0, 1, 0, 2] ],
			[ ['E', 'N', 'S', 'W', 'W'] , [1068, 486, 601, 307] , [1168, 386, 701, 207] , [601] , [0, 1, 0, 2] ],
			[ ['E', 'S', 'E', 'W', 'N', 'W', 'W'] , [223, 860, 355, 212, 654, 162] , [323, 960, 455, 112, 113, 62] , [654] , [0, 0, 1, 0, 3, 2] ],
			[ ['E', 'S', 'E', 'W', 'N', 'W', 'W'] , [222, 856, 616, 216, 651, 162] , [322, 956, 716, 116, 116, 62] , [651] , [0, 0, 1, 0, 3, 2] ],
			[ ['E', 'S', 'E', 'W', 'N', 'W', 'W'] , [220, 857, 886, 220, 654, 161] , [320, 957, 986, 120, 120, 61] , [654] , [0, 0, 1, 0, 3, 2] ]
			],
			]
			#zone 3 ready
#define paths for zone 2 and zone 3


special_path_def = [[
					[ ['S', 'W', 'W'] , [318, 162] , [418, 62] , [482] , [0,2] ],
					[ ['S', 'W', 'W'] , [317, 163] , [417, 63] , [740] , [0,2] ],
					[ ['S', 'W', 'W'] , [313, 164] , [413, 64] , [1008] , [0,2] ],
					[1],
					[1],
					[1],
					[1],
					[1],
					[1],
					],
					[
					[1],
					[1],
					[1],
					[1],
					[1],
					[1],
					[ ['N', 'W', 'W'] , [646, 157] , [546, 57] , [291] , [0,2] ],
					[ ['N', 'W', 'W'] , [647, 151] , [547, 51] , [548] , [0,2] ],
					[ ['N', 'W', 'W'] , [650, 159] , [550, 59] , [807] , [0,2] ]
					]]
'''
	Messages used:
	l -> adjust left (followed by angle)
	r -> adjust right (followed by angle)
	e -> turn left
	i -> turn right
	h -> halt (when bot is in induct zone)
	p -> pass (when bot encounter collision)
	s -> drop packages (followed by belt_msg) #reverse the direction
	n -> drop packages (followed by belt_msg) #does not reverse the direction
'''


	
																#change this field 5 th field							and also the number in 5 th field			
#[ ['E', 'S', 'E', 'W', 'N', 'W', 'W'] , [444, 752, 558, 440, 441, 372] , [544, 852, 658, 340, 482, 272] , [582] , [0, 0, 1, 0, 3, 2] ],


# path_def format [ [dir], [limits], [offset], [center], [turn_path],[overshoot] ]
# self.overshoot = path_def[zone_no][path_no][5][0]